{"version":3,"file":"static/js/227.b431159f.chunk.js","mappings":"sLAEaA,E,QAAOC,GAAAA,GAAH,0C,wICAJC,EAAaD,EAAAA,GAAAA,KAAH,0MAWVE,EAAmBF,EAAAA,GAAAA,OAAH,mWAkBhBG,EAAkBH,EAAAA,GAAAA,MAAH,2P,sCC3BfI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAOjC,OACE,UAAC,EAAD,CAAkBA,SAPC,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,cAAcC,SAASC,YAAYP,MAAMQ,OAC7DP,EAASG,EACV,EAGC,WACE,SAAC,EAAD,CAAwBK,KAAK,SAA7B,UACE,SAAC,MAAD,CAAUC,KAAK,YAGjB,SAAC,EAAD,CACED,KAAK,OACLE,KAAK,cACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,aAAcf,MAIrB,EAEDD,EAAUiB,SAAW,CACnBf,SAAUgB,IAAAA,KAAAA,WACVjB,MAAOiB,IAAAA,OAAAA,Y,qDCsBT,EA9Ce,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMrB,EAAK,UAAGiB,EAAaK,IAAI,gBAApB,QAAgC,GA0B3C,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,+GAEqCC,EAAAA,EAAAA,iBAA8BxB,GAFnE,gBAEqByB,EAFrB,EAEYC,QACRL,EACEI,EAAME,KAAI,SAAAC,GAAI,MAAK,CACjBC,GAAID,EAAKC,GACTC,MAAOF,EAAKG,eAFA,KAJpB,gDAUIC,QAAQC,IAAR,MAVJ,0DAJc,sBACA,KAAVjC,GADU,mCAiBdkC,EACD,GAAE,CAAClC,KAGF,iCACE,SAACL,EAAD,CAAWC,MAAOI,EAAOH,SA1BT,SAAAG,GAClBkB,EAAgBlB,EAAQ,CAAEA,MAAAA,GAAU,CAAC,EACtC,KAyBG,+BACGoB,QADH,IACGA,OADH,EACGA,EAAeO,KAAI,SAAAC,GAAI,OACtB,SAAC,IAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaP,EAAKC,IAAMO,MAAO,CAAEC,KAAMvB,GAA/C,SACGc,EAAKE,SAFOF,EAAKC,GADA,QAU/B,C","sources":["pages/Home/Home.styled.jsx","components/SearchBar/Searchbar.styled.jsx","components/SearchBar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const item = styled.li`\n  padding: 8px 0;\n`;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid black;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  line-height: 1;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import * as style from './Searchbar.styled';\nimport { MdSearch } from 'react-icons/md';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ value, onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.currentTarget.elements.searchInput.value.trim();\n    onSubmit(query);\n  };\n\n  return (\n    <style.SearchForm onSubmit={handleSubmit}>\n      <style.SearchFormButton type=\"submit\">\n        <MdSearch size=\"30px\" />\n      </style.SearchFormButton>\n\n      <style.SearchFormInput\n        type=\"text\"\n        name=\"searchInput\"\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        defaultValue={value}\n      />\n    </style.SearchForm>\n  );\n};\n\nSearchbar.propType = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { Searchbar } from 'components/SearchBar/Searchbar';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport * as style from '../Home/Home.styled';\nimport { useState } from 'react';\nimport movieService from 'utils/moviedb';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedFilms, setSearchedFilms] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  const changeQuery = query => {\n    setSearchParams(query ? { query } : {});\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const { results: films } = await movieService.getFilmsSearched(query);\n        setSearchedFilms(\n          films.map(film => ({\n            id: film.id,\n            title: film.original_title,\n          }))\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar value={query} onSubmit={changeQuery} />\n      <ul>\n        {searchedFilms?.map(film => (\n          <style.item key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </style.item>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["item","styled","SearchForm","SearchFormButton","SearchFormInput","Searchbar","value","onSubmit","event","preventDefault","query","currentTarget","elements","searchInput","trim","type","size","name","autocomplete","autoFocus","placeholder","defaultValue","propType","PropTypes","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","searchedFilms","setSearchedFilms","get","useEffect","movieService","films","results","map","film","id","title","original_title","console","log","fetchData","to","state","from"],"sourceRoot":""}