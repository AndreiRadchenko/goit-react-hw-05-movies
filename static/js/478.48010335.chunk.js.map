{"version":3,"file":"static/js/478.48010335.chunk.js","mappings":"qSAEaA,EAAWC,EAAAA,GAAAA,IAAH,0CAIRC,EAASD,EAAAA,GAAAA,IAAH,gIAQNE,EAAaF,EAAAA,GAAAA,IAAH,8CAIVG,EAAiBH,EAAAA,GAAAA,IAAH,kIAOdI,EAAOJ,EAAAA,GAAAA,GAAH,2C,8BCtBJK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4H,4BCCRO,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC7B,OACE,UAAC,EAAD,CAAgBC,GAAID,EAApB,WACE,SAAC,MAAD,IADF,YAKH,EAEDD,EAAaG,SAAW,CACtBF,aAAcG,IAAAA,OAAAA,YCNhB,IA2EA,EA3EqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAEMR,EAAY,qBADDS,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBC,EAAAA,EAAAA,aAA0BT,GAFjD,OAEUU,EAFV,OAGIN,EAAYM,GAHhB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACb,IAEJ,IAAQc,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,eAAgBC,EACnCb,EADmCa,aAAcC,EACjDd,EADiDc,SAAUC,EAC3Df,EAD2De,OAI7D,OACE,iCACE,SAACvB,EAAD,CAAcC,aAAcA,KAC5B,UAAC,EAAD,WACIkB,GAGA,SAAC,EAAD,CACEK,IAAG,yCAAoCL,GACvCM,IAAI,MAJN,SAAC,IAAD,CAAUC,OAAQ,IAAKC,MAAO,OAOhC,UAAC,EAAD,YACE,wBAAKP,IAAkB,SAAC,IAAD,CAAUO,MAAO,QACvCN,GACC,wCAAgBO,KAAKC,MAAqB,GAAfR,GAA3B,QAEA,wBACE,SAAC,IAAD,CAAUM,MAAO,SAGrB,wBAAKL,EAAW,YAAa,SAAC,IAAD,CAAUK,MAAO,SAC9C,uBAAIL,IAAY,SAAC,IAAD,CAAUQ,MAAO,OACjC,wBAAKR,EAAW,UAAW,SAAC,IAAD,CAAUK,MAAO,QAC3CL,GACC,uBAAIC,EAAOQ,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,QAEjC,wBACE,SAAC,IAAD,CAAUP,MAAO,eAKzB,UAAC,EAAD,YACE,mDACA,2BACE,SAAC,EAAD,WACE,SAAC,KAAD,CAAMzB,GAAE,OAAUS,MAAO,CAAEC,KAAMX,GAAjC,qBAIF,SAAC,EAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAaS,MAAO,CAAEC,KAAMX,GAApC,8BAMN,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/GobackButton/GoBackButton.styled.jsx","components/GobackButton/GoBackButtton.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmCard = styled.div`\n  display: flex;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  width: 264px;\n  height: 373.55px;\n`;\n\nexport const TextFields = styled.div`\n  margin-left: 30px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin: 15px 0;\n  padding: 0 16px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\nexport const item = styled.li`\n  padding: 8px 0;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BtnArrow = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin: 20px 0;\n  text-decoration: none;\n`;\n","import { AiOutlineArrowLeft } from 'react-icons/ai';\nimport * as style from './GoBackButton.styled';\nimport PropTypes from 'prop-types';\n\nexport const GoBackButton = ({ backLinkHref }) => {\n  return (\n    <style.BtnArrow to={backLinkHref}>\n      <AiOutlineArrowLeft />\n      Go back\n    </style.BtnArrow>\n  );\n};\n\nGoBackButton.propType = {\n  backLinkHref: PropTypes.object.isRequired,\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport movieService from 'utils/moviedb';\nimport * as style from './MovieDetails.styled';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\nimport { GoBackButton } from 'components/GobackButton/GoBackButtton';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmData, setFilmData] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchdata() {\n      try {\n        const data = await movieService.getFilmsById(movieId);\n        setFilmData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchdata();\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    filmData;\n  // console.log(location.state.from);\n\n  return (\n    <>\n      <GoBackButton backLinkHref={backLinkHref} />\n      <style.FilmCard>\n        {!poster_path ? (\n          <Skeleton height={373} width={264} />\n        ) : (\n          <style.Poster\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"\"\n          />\n        )}\n        <style.TextFields>\n          <h2>{original_title || <Skeleton width={400} />}</h2>\n          {vote_average ? (\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n          ) : (\n            <p>\n              <Skeleton width={200} />\n            </p>\n          )}\n          <h3>{overview ? 'Overview' : <Skeleton width={200} />}</h3>\n          <p>{overview || <Skeleton count={3} />}</p>\n          <h3>{overview ? 'Genres' : <Skeleton width={200} />}</h3>\n          {overview ? (\n            <p>{genres.map(e => e.name).join(' ')}</p>\n          ) : (\n            <p>\n              <Skeleton width={200} />\n            </p>\n          )}\n        </style.TextFields>\n      </style.FilmCard>\n      <style.AdditionalInfo>\n        <p>Additional information</p>\n        <ul>\n          <style.item>\n            <Link to={`cast`} state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </style.item>\n          <style.item>\n            <Link to={`reviews`} state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </style.item>\n        </ul>\n      </style.AdditionalInfo>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["FilmCard","styled","Poster","TextFields","AdditionalInfo","item","BtnArrow","Link","GoBackButton","backLinkHref","to","propType","PropTypes","movieId","useParams","useState","filmData","setFilmData","useLocation","state","from","useEffect","movieService","data","console","log","fetchdata","poster_path","original_title","vote_average","overview","genres","src","alt","height","width","Math","round","count","map","e","name","join"],"sourceRoot":""}